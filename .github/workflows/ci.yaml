name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: 🔄 Checkout репозитория
        uses: actions/checkout@v3

      - name: 🐍 Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧹 Проверка кода (flake8)
        run: |
          pip install flake8
          flake8 src tests

      - name: 🧪 Запуск тестов (pytest)
        run: |
          pip install pytest
          pytest -s tests

      - name: 🤖 Обучение модели
        run: python src/train.py

      - name: 📦 Сохранение модели как артефакта
        uses: actions/upload-artifact@v4
        with:
          name: uber_model
          path: models/uber_model.joblib

      - name: 🔮 Инференс (src/inference.py)
        run: python src/inference.py

      - name: 📦 Сохранение предсказаний
        uses: actions/upload-artifact@v4
        with:
          name: inference-csv
          path: predictions.csv

      - name: 📄 Сохранение HTML-отчёта
        uses: actions/upload-artifact@v4
        with:
          name: inference-report
          path: report.html


  publish:
    name: Build & Push Docker image to GHCR
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🔄 Checkout репозитория
        uses: actions/checkout@v3

      - name: 📥 Загрузка модели uber_model
        uses: actions/download-artifact@v4
        with:
          name: uber_model
          path: models

      - name: 🔐 Логин в GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Сборка и пуш Docker-образа
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/satti206/uber-api:latest

      - name: 🔐 Авторизация в Yandex Cloud
        uses: yc-actions/yc-cli@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SERVICE_ACCOUNT_KEY }}

      - name: 🐳 Сборка и пуш в YCR
        run: |
          yc config set container-registry-id <твой-registry-id>
          docker build -t cr.yandex/<registry-id>/uber-api:latest .
          docker push cr.yandex/<registry-id>/uber-api:latest

      - name: 🚀 Деплой в Yandex Cloud Run
        run: |
          yc serverless container create-or-update \
            --name uber-api \
            --image cr.yandex/<registry-id>/uber-api:latest \
            --memory 512M \
            --cores 1 \
            --core-fraction 50 \
            --execution-timeout 10s \
            --port 8000 \
            --allow-unauthenticated



